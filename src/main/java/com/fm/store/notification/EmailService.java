package com.fm.store.notification;

import com.fm.store.config.SecretsConfig;

import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;

public class EmailService {

    private final SecretsConfig secretsConfig;

    public EmailService(SecretsConfig secretsConfig) {
        this.secretsConfig = secretsConfig;
    }

    public void sendEmail(String to, String subject, String text) {
        // Put sender’s address
        String from = "office@freeminions.com";
        // username generated by Mailtrap
        String username = secretsConfig.getMailtrap().getUsername();
        // password generated by Mailtrap
        String password = secretsConfig.getMailtrap().getPassword();

        // Paste host address from the SMTP settings tab in your Mailtrap Inbox
        String host = "smtp.mailtrap.io";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        // it’s optional in Mailtrap
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        // use one of the options in the SMTP settings tab in your Mailtrap Inbox
        props.put("mail.smtp.port", "2525");

        // Get the Session object.
        Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });

        try {
            // Create a default MimeMessage object.
            Message message = new MimeMessage(session);

            // Set From: header field
            message.setFrom(new InternetAddress(from));

            // Set To: header field
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(to));

            // Set Subject: header field
            message.setSubject(subject);

            // Put the content of your message
            message.setText(text);

            // Send message
            Transport.send(message);
        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }
}
